datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum PublishStatus {
  DRAFT
  PUBLISHED
}

generator client {
  provider = "prisma-client-js"
}

model Admin {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String?
  bio      String?
  picture  String?
  posts    Post[]
  pages    Page[]
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  category  Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  image     String?  // Optional image path
  thumbnail String?  // Optional thumbnail path
  status    PublishStatus @default(DRAFT)
  publishedAt DateTime?
  author    Admin    @relation(fields: [authorId], references: [id])
  authorId  Int
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  slug  String @unique
  posts Post[]
}

model Page {
  id      Int      @id @default(autoincrement())
  title   String
  slug    String   @unique
  content String
  status    PublishStatus @default(DRAFT)
  publishedAt DateTime?
  author    Admin    @relation(fields: [authorId], references: [id])
  authorId  Int
}



model BlogSettings {
  id                Int      @id @default(autoincrement())
  language          String   @default("es")
  template          String   @default("default")
  domain            String?
  googleAnalyticsId String?
  socialNetworks    Json?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model MenuItem {
  id        Int      @id @default(autoincrement())
  parentId  Int?
  parent    MenuItem?  @relation("MenuItemToMenuItem", fields: [parentId], references: [id])
  children  MenuItem[] @relation("MenuItemToMenuItem")
}

model Media {
  id        Int      @id @default(autoincrement())
  filename  String
  path      String
  type      String
  size      Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
